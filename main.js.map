{"version":3,"file":"main.js","mappings":"mBAmCA,SAASA,EAASC,EAAQC,EAAYC,EAAWC,GAG/CA,EAAWH,EAFKC,EAAWG,UAAUC,SAAS,gCAG3CC,MAAK,SAAAC,GACJN,EAAWG,UAAUI,OAAO,+BAC5BN,EAAUO,YAAcF,EAAKG,MAAMC,MACrC,IACCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,gBAADC,OAAiBH,GAAM,GACtD,CC5CA,SAASI,EAAUC,GACjBA,EAAad,UAAUe,IAAI,mBAC3BC,SAASC,iBAAiB,UAAWC,EACvC,CAEA,SAASC,EAAWL,GAClBA,EAAad,UAAUoB,OAAO,mBAC9BJ,SAASK,oBAAoB,UAAWH,EAC1C,CAEA,SAASA,EAAcI,GACL,WAAZA,EAAIC,KAENJ,EADcH,SAASQ,cAAc,oBAGzC,CCXA,SAASC,EAAkBC,EAAWC,EAAeC,IAJrD,SAAyBF,GACvB,OAAOA,EAAUG,MAAK,SAAAC,GAAY,OAAKA,EAAaC,SAASC,KAAK,GACpE,CAGMC,CAAgBP,IAIlBC,EAAcO,UAAW,EACzBP,EAAc3B,UAAUoB,OAAOQ,EAAiBO,uBAJhDR,EAAcO,UAAW,EACzBP,EAAc3B,UAAUe,IAAIa,EAAiBO,qBAKjD,CAUA,SAASC,EAAeC,EAAaP,GACnC,IAAMQ,EAAeD,EAAYb,cAAc,IAADZ,OAAKkB,EAAaS,GAAE,WAElET,EAAa9B,UAAUoB,OAAO,2BAC9BkB,EAAatC,UAAUoB,OAAO,uBAC9BkB,EAAajC,YAAc,EAC7B,CAkCA,SAASmC,EAAgBH,EAAaT,GACpC,IAAMF,EAAYe,MAAMC,KAAKL,EAAYM,iBAAiBf,EAAiBgB,gBAG3EnB,EAAkBC,EAFIW,EAAYb,cAAcI,EAAiBiB,sBAErBjB,GAE5CF,EAAUoB,SAAQ,SAAAhB,GAAY,OAAIM,EAAeC,EAAaP,EAAa,GAC7E,C,i1BCrEA,IAAMiB,EAAS,CACbC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIdC,EACA,YADAA,EAGG,SAKT,SAASC,EAAWC,GAAwB,IAAdC,EAAOC,UAAAhD,OAAA,QAAAiD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvC,OAAOE,MAAM,GAAD7C,OAAImC,EAAOC,SAAOpC,OAAGyC,G,+VAAQK,CAAA,CACvCT,QAASF,EAAOE,SACbK,IACFpD,KAAKyD,EACV,CAEA,SAASA,EAAeC,GACtB,OAAOA,EAAIC,GAAKD,EAAIE,OAASC,QAAQC,OAAO,WAADpD,OAAYgD,EAAIK,QAC7D,CAEA,IAgBMC,EAcQ,SAACtE,EAAQuE,GAAO,OAC1Bf,EA7CQ,SAACxD,GAAM,sBAAAgB,OAAqBhB,EAAM,CA6C/BuD,CAAuBvD,GAAS,CACzCwE,OAAQD,EAAU,SAAW,OAC7B,E,sGCtDN,IAAME,EAAerD,SAASQ,cAAc,mBACtC8C,EAAqBtD,SAASQ,cAAc,yBAC5C+C,EAAgBvD,SAASQ,cAAc,mBACzCgD,EAAS,KAEPC,EAAoBzD,SAASQ,cAAc,6BAC3CkD,EAAmBD,EAAkBjD,cAAc,gBACnDmD,EAAoBD,EAAiBlD,cAAc,6BACnDoD,EAAyBF,EAAiBlD,cAAc,kBAExDqD,EAAmB7D,SAASQ,cAAc,oBAC1CsD,EAAoB9D,SAASQ,cAAc,yBAC3CuD,EAAkBF,EAAiBrD,cAAc,gBACjDwD,EAAmBD,EAAgBvD,cAAc,2BACjDyD,EAA0BF,EAAgBvD,cAAc,kCACxD0D,EAAsBH,EAAgBvD,cAAc,kBAEpD2D,EAAenE,SAASQ,cAAc,wBACtC4D,EAAgBpE,SAASQ,cAAc,wBACvC6D,EAAcF,EAAa3D,cAAc,gBACzC8D,EAAgBD,EAAY7D,cAAc,gCAC1C+D,EAAeF,EAAY7D,cAAc,0BACzCgE,EAA0BH,EAAY7D,cAAc,kBAEpDiE,EAAazE,SAASQ,cAAc,qBACpCkE,EAAaD,EAAWjE,cAAc,iBACtCmE,EAAeF,EAAWjE,cAAc,mBAExCoE,EAAkB5E,SAASQ,cAAc,2BACzCqE,EAAiBD,EAAgBpE,cAAc,gBACjDsE,EAAkB,KAClBC,EAAuB,KAErBC,EAAWhF,SAASQ,cAAc,iBAElCyE,EAASjF,SAAS2B,iBAAiB,UAEnCf,EAAmB,CACvBsE,aAAc,eACdtD,cAAe,gBACfC,qBAAsB,iBACtBV,oBAAqB,yBACrBgE,gBAAiB,0BACjBC,WAAY,wBAqCd,SAASC,EAAc1E,EAAe2E,GACxB3E,EAActB,YAA1BiG,EAAwC,gBAA8C,WACxF,CAEA,SAASC,EAAWpG,GAClB,OJ3FF,SAAoBA,EAAMqG,EAAkBC,EAAgBC,EAAsB3G,GAChF,IACM4G,EADe3F,SAASQ,cAAc,kBAAkBoF,QAC7BpF,cAAc,SAASqF,WAAU,GAE5DC,EAAYH,EAAYnF,cAAc,gBACtCuF,EAAYJ,EAAYnF,cAAc,gBACtCwF,EAAeL,EAAYnF,cAAc,wBACzC3B,EAAa8G,EAAYnF,cAAc,sBACvC1B,EAAY6G,EAAYnF,cAAc,qBAoB5C,OAlBAsF,EAAUG,IAAM9G,EAAK+G,KACrBJ,EAAUK,IAAMhH,EAAKiH,KACrBL,EAAU1G,YAAcF,EAAKiH,KAC7BtH,EAAUO,YAAcF,EAAKG,MAEzBH,EAAKgE,SACPtE,EAAWG,UAAUe,IAAI,+BAGvBZ,EAAKkH,MAAMC,MAAQnH,EAAKqE,OAC1BwC,EAAa5F,SAEb4F,EAAa/F,iBAAiB,SAAS,kBAAMuF,EAAiBrG,EAAKP,OAAQ+G,EAAY,IAGzF9G,EAAWoB,iBAAiB,SAAS,kBAAMwF,EAAetG,EAAKP,OAAQC,EAAYC,EAAWC,EAAW,IACzG+G,EAAU7F,iBAAiB,SAAS,kBAAMyF,EAAqBvG,EAAKiH,KAAMjH,EAAK+G,KAAK,IAE7EP,CACT,CI8DSY,CAAWpH,EAAMqH,EAAqB7H,EAAU8H,EAAgBvD,EACzE,CAEA,SAASsD,EAAoB5H,EAAQ+G,GACnC9F,EAAU+E,GAEVE,EAAkBlG,EAClBmG,EAAuBY,CACzB,CAaA,SAASc,EAAeL,EAAMF,GAC5BxB,EAAWuB,IAAMC,EACjBxB,EAAWyB,IAAMC,EACjBzB,EAAatF,YAAc+G,EAE3BvG,EAAU4E,EACZ,CAlEAQ,EAAOnD,SAAQ,SAAA4E,GACbA,EAAM1H,UAAUe,IAAI,qBACpB2G,EAAMzG,iBAAiB,SAAS,SAACK,IAC3BA,EAAIqG,OAAO3H,UAAUC,SAAS,iBAAoBqB,EAAIsG,gBAAkBtG,EAAIqG,SAC9ExG,EAAWuG,EAEf,GACF,IAEA3D,QAAQ8D,IAAI,CDjCKzE,EAAWD,GAgBHC,EAAWD,KCkBjCjD,MAAK,SAAA4H,GAA2B,I,IAAAC,G,EAAA,E,4CAAAD,I,s1BAAzBE,EAAQD,EAAA,GAAEE,EAASF,EAAA,GACzB1D,EAAahE,YAAc2H,EAASZ,KACpC9C,EAAmBjE,YAAc2H,EAASE,MAC1C3D,EAAc4D,MAAMC,gBAAkB,OAAHxH,OAAUoH,EAASK,OAAM,KAC5D7D,EAASwD,EAASV,IAElBW,EAAUnF,SAAQ,SAAA3C,GAChB,IAAMgE,EAAUhE,EAAKG,MAAMuB,MAAK,SAAAyG,GAAI,OAAIA,EAAKhB,MAAQ9C,CAAM,IAE3DwB,EAASuC,OAAOhC,EAAW,CACzBa,KAAMjH,EAAKiH,KACXF,KAAM/G,EAAK+G,KACX5G,MAAOH,EAAKG,MAAMC,OAClB8G,MAAOlH,EAAKkH,MACZ7C,OAAQA,EACR5E,OAAQO,EAAKmH,IACbnD,QAAAA,IAEJ,GACF,IACC3D,OAAM,SAAAC,GACLC,QAAQC,MAAM,kBAAmBF,EACnC,IA2GF8D,EAActD,iBAAiB,SAAS,kBAAMJ,EAAU4D,EAAkB,IAC1EK,EAAkB7D,iBAAiB,SAxEnC,WACE+D,EAAiBwD,MAAQnE,EAAahE,YACtC4E,EAAwBuD,MAAQlE,EAAmBjE,YAEnDQ,EAAUgE,GACVrC,EAAgBuC,EAAiBnD,EACnC,IAmEAwD,EAAcnE,iBAAiB,SAAS,kBAAMJ,EAAUsE,EAAa,IAErEJ,EAAgB9D,iBAAiB,UAnEjC,SAAqCK,GDlGvB,IAAC8F,EAAMc,ECmGnB5G,EAAImH,iBAEJpC,EAAcnB,GAAqB,IDrGtBkC,ECuGMpC,EAAiBwD,MDvGjBN,ECuGwBjD,EAAwBuD,MDtGjEpF,EAAWD,EAAkB,CAC3BiB,OAAQ,QACRsE,KAAMC,KAAKC,UAAU,CAACxB,KAAAA,EAAMc,MAAAA,OCqG7BhI,MAAK,SAAA2I,GACJxE,EAAahE,YAAcwI,EAAKzB,KAChC9C,EAAmBjE,YAAcwI,EAAKX,MAEtC/G,EAAW0D,GACXE,EAAgB+D,OAClB,IACCtI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,6BAA8BF,EAAI,IAC7DsI,SAAQ,WACP1C,EAAcnB,GAAqB,EACrC,GACJ,IAmDAG,EAAYpE,iBAAiB,UAjD7B,SAAiCK,GDrGnB,IAAC8F,EAAMF,ECsGnB5F,EAAImH,iBAEJpC,EAAcb,GAAyB,IDxG1B4B,EC0GM9B,EAAckD,MD1GdtB,EC0GqB3B,EAAaiD,MDzGnDpF,EAAWD,EAAqB,CAC5BiB,OAAQ,OACRsE,KAAMC,KAAKC,UAAU,CAAExB,KAAAA,EAAMF,KAAAA,OCwGhChH,MAAK,SAAAC,GACJ6F,EAASgD,QAAQzC,EAAW,CAC1Ba,KAAMjH,EAAKiH,KACXF,KAAM/G,EAAK+G,KACXG,MAAOlH,EAAKkH,MACZ7C,OAAQA,EACR5E,OAAQO,EAAKmH,OAGfnG,EAAWgE,GACXE,EAAYyD,QACZtG,EAAgB6C,EAAazD,EAC/B,IACCpB,MAAME,QAAQC,OACdoI,SAAQ,WACP1C,EAAcb,GAAyB,EACzC,GACJ,IA2BAd,EAAiBzD,iBAAiB,UAzBlC,SAAsCK,GDxItB,IAAC+G,ECyIf/G,EAAImH,iBAEJpC,EAAczB,GAAwB,ID3IvByD,EC6IM1D,EAAkB6D,MD5InCpF,EA3BI,mBA2B6B,CAC/BgB,OAAQ,QACRsE,KAAMC,KAAKC,UAAU,CAAEP,OAAAA,OC2I1BnI,MAAK,SAAAoI,GACJ/D,EAAc4D,MAAMC,gBAAkB,OAAHxH,OAAU0H,EAAKD,OAAM,KAExDlH,EAAWsD,GACXC,EAAiBoE,QACjBtG,EAAgBkC,EAAkB9C,EACpC,IACCpB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,6BAA8BF,EAAI,IAC7DsI,SAAQ,WACP1C,EAAczB,GAAwB,EACxC,GACJ,IASAiB,EAAe5E,iBAAiB,UAjGhC,SAA0BK,GDjDZ,IAAC1B,ECkDb0B,EAAImH,kBDlDS7I,ECoDMkG,EDnDjB1C,EAzCI,SAACxD,GAAM,gBAAAgB,OAAehB,EAAM,CAyCrBuD,CAAmBvD,GAAS,CACrCwE,OAAQ,YCmDTlE,MAAK,WACO6F,EJ1EV3E,SI2EDD,EAAWyE,EACb,IACCpF,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,IFxDA,SAA0BmB,GACPa,MAAMC,KAAK1B,SAAS2B,iBAAiBf,EAAiBsE,eAE9DpD,SAAQ,SAAAT,IAjBnB,SAA2BA,EAAaT,GACtC,IAAMF,EAAYe,MAAMC,KAAKL,EAAYM,iBAAiBf,EAAiBgB,gBACrEjB,EAAgBU,EAAYb,cAAcI,EAAiBiB,sBAEjEpB,EAAkBC,EAAWC,EAAeC,GAE5CF,EAAUoB,SAAQ,SAAAhB,GAChBA,EAAab,iBAAiB,SAAS,YAjB3C,SAAiBoB,EAAaP,GAC5BA,EAAaC,SAASkH,gBACpBnH,EAAaoH,kBAAkBpH,EAAaqH,QAAQC,cACpDtH,EAAaoH,kBAAkB,IAEjCpH,EAAaC,SAASC,MACpBI,EAAeC,EAAaP,GAtBhC,SAAwBO,EAAaP,EAAcsH,GACjD,IAAM9G,EAAeD,EAAYb,cAAc,IAADZ,OAAKkB,EAAaS,GAAE,WAElET,EAAa9B,UAAUe,IAAI,2BAC3BuB,EAAatC,UAAUe,IAAI,uBAC3BuB,EAAajC,YAAc+I,CAC7B,CAiBIC,CAAehH,EAAaP,EAAcA,EAAawH,kBAC3D,CAUMC,CAAQlH,EAAaP,GACrBL,EAAkBC,EAAWC,EAAeC,EAC9C,GACF,GACF,CAMI4H,CAAkBnH,EAAaT,EACjC,GACF,CE4IA6H,CAAiB7H,E","sources":["webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["function createCard(card, handleDeleteCard, handleLikeCard, handleOpenImageModal, toggleLike) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n\n  const cardImage = cardElement.querySelector('.card__image');\n  const cardTitle = cardElement.querySelector('.card__title');\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const likeCount = cardElement.querySelector('.card__like-count');\n\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n  cardTitle.textContent = card.name;\n  likeCount.textContent = card.likes;\n\n  if (card.isLiked) {\n    likeButton.classList.add('card__like-button_is-active');\n  }\n\n  if (card.owner._id !== card.userId) {\n    deleteButton.remove();\n  } else {\n    deleteButton.addEventListener('click', () => handleDeleteCard(card.cardId, cardElement));\n  }\n\n  likeButton.addEventListener('click', () => handleLikeCard(card.cardId, likeButton, likeCount, toggleLike));\n  cardImage.addEventListener('click', () => handleOpenImageModal(card.name, card.link));\n\n  return cardElement;\n}\n\nfunction deleteCard(card) {\n  card.remove();\n}\n\nfunction likeCard(cardId, likeButton, likeCount, toggleLike) {\n  const isLiked = likeButton.classList.contains('card__like-button_is-active');\n\n  toggleLike(cardId, isLiked)\n    .then(card => {\n      likeButton.classList.toggle('card__like-button_is-active');\n      likeCount.textContent = card.likes.length;\n    })\n    .catch(err => console.error(`Ошибка лайка ${err}`));\n}\n\nexport { createCard, deleteCard, likeCard };\n","function openModal(modalElement) {\n  modalElement.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closeModalEsc);\n}\n\nfunction closeModal(modalElement) {\n  modalElement.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', closeModalEsc);\n}\n\nfunction closeModalEsc(evt) {\n  if (evt.key === 'Escape') {\n    const modal = document.querySelector('.popup_is-opened');\n    closeModal(modal);\n  }\n}\n\nexport { openModal, closeModal };","function hasInvalidInput(inputList) {\n  return inputList.some(inputElement => !inputElement.validity.valid)\n}\n\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);    \n  }\n}\n\nfunction showInputError(formElement, inputElement, errorMessage) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n\n  inputElement.classList.add('popup__input_type_error');\n  errorElement.classList.add('popup-error-visible');\n  errorElement.textContent = errorMessage;\n}\n\nfunction hideInputError(formElement, inputElement) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n\n  inputElement.classList.remove('popup__input_type_error');\n  errorElement.classList.remove('popup-error-visible');\n  errorElement.textContent = '';\n}\n\nfunction isValid(formElement, inputElement) {\n  inputElement.validity.patternMismatch ?\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage) :\n    inputElement.setCustomValidity('');\n\n  inputElement.validity.valid ? \n    hideInputError(formElement, inputElement) : \n    showInputError(formElement, inputElement, inputElement.validationMessage);\n}\n\nfunction setEventListeners(formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  toggleButtonState(inputList, buttonElement, validationConfig);\n\n  inputList.forEach(inputElement => {\n    inputElement.addEventListener('input', () => {\n      isValid(formElement, inputElement);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n}\n\nfunction enableValidation(validationConfig) {\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n\n  formList.forEach(formElement => {\n    setEventListeners(formElement, validationConfig);\n  });\n}\n\nfunction clearValidation(formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  toggleButtonState(inputList, buttonElement, validationConfig);\n\n  inputList.forEach(inputElement => hideInputError(formElement, inputElement));\n}\n\nexport { enableValidation, clearValidation };","const CONFIG = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-38',\n  headers: {\n    authorization: 'c214b40d-4321-4dee-b037-8cce0ace453c',\n    'Content-Type': 'application/json'\n  }\n};\n\nconst endpointPaths = {\n  me: '/users/me',\n  avatar: '/users/me/avatar',\n  cards: '/cards',\n  card: (cardId) => `/cards/${cardId}`,\n  cardLike: (cardId) => `/cards/likes/${cardId}`\n};\n\nfunction apiRequest(endpoint, options = {}) {\n  return fetch(`${CONFIG.baseUrl}${endpoint}`, {\n    headers: CONFIG.headers,\n    ...options\n  }).then(handleResponse);\n}\n\nfunction handleResponse(res) {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n}\n\nconst userAPI = {\n  getUser: () => apiRequest(endpointPaths.me),\n\n  updateUser: (name, about) =>\n    apiRequest(endpointPaths.me, {\n      method: 'PATCH',\n      body: JSON.stringify({name, about})\n    }),\n\n  updateAvatar: (avatar) => \n      apiRequest(endpointPaths.avatar, {\n        method: 'PATCH',\n        body: JSON.stringify({ avatar })\n      })\n};\n\nconst cardAPI = {\n  getInitialCards: () => apiRequest(endpointPaths.cards),\n\n  createCard: (name, link) => \n    apiRequest(endpointPaths.cards, {\n        method: 'POST',\n        body: JSON.stringify({ name, link })\n      }),\n\n  deleteCard: (cardId) => \n    apiRequest(endpointPaths.card(cardId), {\n      method: 'DELETE'\n    }),\n\n  toggleLike: (cardId, isLiked) => \n    apiRequest(endpointPaths.cardLike(cardId), {\n      method: isLiked ? 'DELETE' : 'PUT'\n    })\n};\n\nexport { userAPI, cardAPI };","import '../pages/index.css';\nimport { createCard, deleteCard, likeCard } from './components/card.js';\nimport { openModal, closeModal } from './components/modal.js';\nimport { enableValidation, clearValidation } from './components/validation.js';\nimport { userAPI, cardAPI } from './components/api.js';\n\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst profileAvatar = document.querySelector('.profile__image');\nlet userId = null;\n\nconst updateAvatarModal = document.querySelector('.popup_type_update-avatar');\nconst updateAvatarForm = updateAvatarModal.querySelector('.popup__form');\nconst updateAvatarInput = updateAvatarForm.querySelector('.popup__input_type_avatar');\nconst updateAvatarFormButton = updateAvatarForm.querySelector('.popup__button');\n\nconst editProfileModal = document.querySelector('.popup_type_edit');\nconst editProfileButton = document.querySelector('.profile__edit-button');\nconst editProfileForm = editProfileModal.querySelector('.popup__form');\nconst profileNameInput = editProfileForm.querySelector('.popup__input_type_name');\nconst profileDescriptionInput = editProfileForm.querySelector('.popup__input_type_description');\nconst profileSubmitButton = editProfileForm.querySelector('.popup__button');\n\nconst addCardModal = document.querySelector('.popup_type_new-card');\nconst addCardButton = document.querySelector('.profile__add-button');\nconst addCardForm = addCardModal.querySelector('.popup__form');\nconst cardNameInput = addCardForm.querySelector('.popup__input_type_card-name');\nconst cardUrlInput = addCardForm.querySelector('.popup__input_type_url');\nconst addCardFormSubmitButton = addCardForm.querySelector('.popup__button');\n\nconst imageModal = document.querySelector('.popup_type_image');\nconst popupImage = imageModal.querySelector('.popup__image');\nconst popupCaption = imageModal.querySelector('.popup__caption');\n\nconst deleteCardModal = document.querySelector('.popup_type_delete-card');\nconst deleteCardForm = deleteCardModal.querySelector('.popup__form');\nlet idCardForDelete = null;\nlet cardElementForDelete = null;\n\nconst cardList = document.querySelector('.places__list');\n\nconst popups = document.querySelectorAll('.popup');\n\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\npopups.forEach(popup => {\n  popup.classList.add('popup_is-animated');\n  popup.addEventListener('click', (evt) => {\n    if (evt.target.classList.contains('popup__close') || (evt.currentTarget === evt.target)) {\n      closeModal(popup);\n    }\n  });\n});\n\nPromise.all([userAPI.getUser(), cardAPI.getInitialCards()])\n  .then(([userData, cardsData]) => {\n    profileTitle.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileAvatar.style.backgroundImage = `url(${userData.avatar})`;\n    userId = userData._id;\n\n    cardsData.forEach(card => {\n      const isLiked = card.likes.some(user => user._id === userId);\n\n      cardList.append(renderCard({\n        name: card.name, \n        link: card.link, \n        likes: card.likes.length,\n        owner: card.owner,\n        userId: userId,\n        cardId: card._id,\n        isLiked\n      }));\n    })\n  })\n  .catch(err => {\n    console.error('Ошибка загрузки', err);\n  });\n\nfunction renderLoading(buttonElement, isLoading) {\n  isLoading ? buttonElement.textContent = 'Сохранение...' : buttonElement.textContent = 'Сохранить';\n}\n\nfunction renderCard(card) {\n  return createCard(card, openDeleteCardModal, likeCard, openImageModal, cardAPI.toggleLike);\n}\n\nfunction openDeleteCardModal(cardId, cardElement) {\n  openModal(deleteCardModal);\n\n  idCardForDelete = cardId;\n  cardElementForDelete = cardElement;\n}\n\nfunction handleDeleteCard(evt) {\n  evt.preventDefault();\n\n  cardAPI.deleteCard(idCardForDelete)\n    .then(() => {\n      deleteCard(cardElementForDelete);\n      closeModal(deleteCardModal);\n    })\n    .catch(err => console.error(err));\n}\n\nfunction openImageModal(name, link) {\n  popupImage.src = link;\n  popupImage.alt = name;\n  popupCaption.textContent = name;\n\n  openModal(imageModal);\n}\n\nfunction handleEditProfileButtonClick() {\n  profileNameInput.value = profileTitle.textContent;\n  profileDescriptionInput.value = profileDescription.textContent;\n\n  openModal(editProfileModal);\n  clearValidation(editProfileForm, validationConfig);\n}\n\nfunction handleEditProfileFormSubmit(evt) {\n  evt.preventDefault();\n\n  renderLoading(profileSubmitButton, true);\n\n  userAPI.updateUser(profileNameInput.value, profileDescriptionInput.value)\n    .then(data => {\n      profileTitle.textContent = data.name;\n      profileDescription.textContent = data.about;\n\n      closeModal(editProfileModal);\n      editProfileForm.reset();\n    })\n    .catch(err => console.error('Ошибка обновления профиля.', err))\n    .finally(() => {\n      renderLoading(profileSubmitButton, false);\n    });\n}\n\nfunction handleAddCardFormSubmit(evt) {\n  evt.preventDefault();\n\n  renderLoading(addCardFormSubmitButton, true);\n\n  cardAPI.createCard(cardNameInput.value, cardUrlInput.value)\n    .then(card => {\n      cardList.prepend(renderCard({\n        name: card.name,\n        link: card.link, \n        owner: card.owner,\n        userId: userId,\n        cardId: card._id\n      }))\n\n      closeModal(addCardModal);\n      addCardForm.reset();\n      clearValidation(addCardForm, validationConfig);\n    })\n    .catch(console.error)\n    .finally(() => {\n      renderLoading(addCardFormSubmitButton, false);\n    });\n}\n\nfunction handleUpdateAvatarFormSubmit(evt) {\n  evt.preventDefault();\n\n  renderLoading(updateAvatarFormButton, true);\n\n  userAPI.updateAvatar(updateAvatarInput.value)\n    .then(user => {\n      profileAvatar.style.backgroundImage = `url(${user.avatar})`;\n\n      closeModal(updateAvatarModal);\n      updateAvatarForm.reset();\n      clearValidation(updateAvatarForm, validationConfig);\n    })\n    .catch(err => console.error('Ошибка добавления аватара:', err))\n    .finally(() => {\n      renderLoading(updateAvatarFormButton, false);\n    });\n}\n\nprofileAvatar.addEventListener('click', () => openModal(updateAvatarModal))\neditProfileButton.addEventListener('click', handleEditProfileButtonClick);\naddCardButton.addEventListener('click', () => openModal(addCardModal));\n\neditProfileForm.addEventListener('submit', handleEditProfileFormSubmit);\naddCardForm.addEventListener('submit', handleAddCardFormSubmit);\nupdateAvatarForm.addEventListener('submit', handleUpdateAvatarFormSubmit);\ndeleteCardForm.addEventListener('submit', handleDeleteCard);\n\nenableValidation(validationConfig);"],"names":["likeCard","cardId","likeButton","likeCount","toggleLike","classList","contains","then","card","toggle","textContent","likes","length","catch","err","console","error","concat","openModal","modalElement","add","document","addEventListener","closeModalEsc","closeModal","remove","removeEventListener","evt","key","querySelector","toggleButtonState","inputList","buttonElement","validationConfig","some","inputElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","hideInputError","formElement","errorElement","id","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","CONFIG","baseUrl","headers","authorization","endpointPaths","apiRequest","endpoint","options","arguments","undefined","fetch","_objectSpread","handleResponse","res","ok","json","Promise","reject","status","cardAPI","isLiked","method","profileTitle","profileDescription","profileAvatar","userId","updateAvatarModal","updateAvatarForm","updateAvatarInput","updateAvatarFormButton","editProfileModal","editProfileButton","editProfileForm","profileNameInput","profileDescriptionInput","profileSubmitButton","addCardModal","addCardButton","addCardForm","cardNameInput","cardUrlInput","addCardFormSubmitButton","imageModal","popupImage","popupCaption","deleteCardModal","deleteCardForm","idCardForDelete","cardElementForDelete","cardList","popups","formSelector","inputErrorClass","errorClass","renderLoading","isLoading","renderCard","handleDeleteCard","handleLikeCard","handleOpenImageModal","cardElement","content","cloneNode","cardImage","cardTitle","deleteButton","src","link","alt","name","owner","_id","createCard","openDeleteCardModal","openImageModal","popup","target","currentTarget","all","_ref","_ref2","userData","cardsData","about","style","backgroundImage","avatar","user","append","value","preventDefault","body","JSON","stringify","data","reset","finally","prepend","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}